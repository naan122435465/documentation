LỚP OBJECT
- mặc định lớp object là lớp cha của tất cả  các lớp trong java. nói cách khác nó là một lớp cao nhất trong java.
- sử dụng lớp object là hữu ích nếu bạn muốn tham chiếu bất kỳ đối tượng nào mà bạn chưa biết kiểu dữ liệu của đối tượng đố. chú ý rằng biến tham chiếu của lớp cha có thể 
tham chiếu đến đối tượng của lớp con gọi là upcasting.
- lớp object cung cấo một vài các xử lý chung cho tất cả các đối tượng như đối tượng có thể được so sánh, đối tượng có thể được cloned...
- các phương thức của lớp object:
	+ public final Class getClass() : trả về đối tượng lớp class của đối tượng hiện tại. Từ lớp class đó có thể lấy được các thông tin metadata của class hiện tại.
	+ public int hashCode() : trả  về số hashcode cho đối tượng hiện tại.
	+ public boolean equals(Object obj): so sánh đối tượng đã cho với đối tượng hiện tại.
	+ protected Object clone() throws CloneNotSupportedException : tạo và trả về bản sao chép (clone) của đối tượng hiện tại.
	+ public String toString() trả về chuỗi ký tự đại diện của đối tượng hiện tại.
	+ public final void notify() : đánh thức một luồng, đợi trình giám sát của đối tượng hiện tại.
	+ publlic final void notify(All): đánh thức tất cả các luồng đợi trình giám sát của đối tượng hiện tại.
	+ public final void wait(long timeout , int nanos) throws InterruptedException : làm cho thread hiện tại đợi trong khoảng thời gian là số mili giây cụ thể, tới khu thread khác thông
 báo( gọi phương thức notify() hoặc notifyAll().
	+ public final void wait(long timeout, int nanos) throws InterruptedException : làm cho thread hiện tại đợi tới khi thread khác thông báo 
	+ protected void finalize() throws Throwable: được gọi bởi Garbage Collector trước khi đối tượng bị dọn rác.
=========================================================================================================================================================================
-Object cloning là cách để tạo ra một bản sao chính xác của một đối tượng bị clone. Phương thức clone() được sử dụng để tạo ra một object mới.
- class của đối tượng mà chúng ra muốn clone phải được implements từ interface java.lang.Cloneable
- cú pháp : protected native Object clone() throws CloneNotSupportedException;
- phương thức clone() tiết kiệm tác vụ xử lý bổ sung để tạo ra một bản sao chính xác của một đối tượng. nếu chúng ta thực hiện nó bằng cách sử dụng để từ khoá new  và gán giá trị này cho 
đối tượng khác sẽ mất rất nhiều tiến trình 
xử lý được thực hiện, đó lý do tại sao chúng ta sử dụng object cloning. giảm thiểu tác vụ xử lý.